{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","resources/img/mjolnir.png","services/MarvelService.js","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.js","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","components/app/App.jsx","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","response","ok","Error","status","json","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","name","description","thumbnail","path","extension","urls","comics","slice","homepage","wiki","items","View","char","thumbnailClass","includes","rel","target","RandomChar","useState","setChar","loading","setLoading","error","setError","marveService","MarvelService","onCharLoaded","onError","setState","updateCharacter","Math","floor","random","then","catch","useEffect","errorMessage","spinner","content","onClick","mjolnir","InfiniteLoading","onIntersect","isDisabled","entries","setEntries","elementRef","useRef","observer","destroyObserver","current","unobserve","IntersectionObserver","rootMargin","threshold","observe","isIntersecting","ref","Portal","props","ReactDOM","createPortal","children","document","body","CharList","charList","setCharList","newItemsLoading","setNewItemsLoading","setOffset","charEnded","setCharEnded","showModal","setShowModal","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","onHandleClick","e","focus","onCharSelect","charClass","result","selectedChar","tabIndex","onKeyDown","code","preventDefault","onHandleKeyDown","renderItems","disabled","Skeleton","objectFit","imgStyle","item","i","CharInfo","marvelServices","updateChar","charId","onCharLoading","skeleton","ErrorBoundary","state","errorInfo","console","log","this","Component","App","setSelectedChar","decoration","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51afcb8e.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nimport './errorMessage.scss'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className={'error-message'}>\r\n            <img src={img}\r\n                 alt=\"Error\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    _apiKey = 'apikey=80f011b25c1428d39d22690f30880db4'\r\n    _baseOffset = 210\r\n\r\n    getResource = async(url) => {\r\n        let response = await fetch(url)\r\n\r\n        if (!response.ok) throw new Error(`Could not fetch ${url} , status: ${response.status}`)\r\n\r\n        return await response.json()\r\n    }\r\n\r\n    // getResource(url) {\r\n    //     return fetch(url)\r\n    //         .then(res => {\r\n    //             if (!res.ok) throw new Error(`Could not fetch ${url} , status: ${res.status}`)\r\n    //             return res.json()\r\n    //         })\r\n    // }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        let res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\r\n        return res.data.results.map(this._transformCharacter)\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`)\r\n        // const res = await Promise.resolve('error')\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacter = ({id,name, description, thumbnail:{path,extension}, urls, comics}) => {\r\n        return {\r\n            id,\r\n            name,\r\n            description: description ? `${description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: `${path}.${extension}`,\r\n            homepage: urls[0].url,\r\n            wiki: urls[1].url,\r\n            comics: comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default new MarvelService()\r\n\r\n\r\n\r\n\r\n","import {useEffect, useState} from \"react\";\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from \"../../services/MarvelService\";\n\nconst RandomChar = () => {\n    const [char,setChar] = useState({})\n    const [loading,setLoading] = useState(true)\n    const [error,setError] = useState(false)\n\n    const marveService = MarvelService\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n        setLoading(false)\n    }\n\n    const onCharLoading = () => {\n        setLoading(true)\n    }\n\n    const onReloadChar = () => {\n        updateCharacter()\n    }\n\n    const onError = () => {\n        this.setState({\n            loading:false,\n            error: true\n        })\n        setLoading(false)\n        setError(true)\n    }\n\n    const updateCharacter = () => {\n        onCharLoading()\n        const id = Math.floor(Math.random() * 400 + 1011000)\n        marveService\n            .getCharacter(id)\n            .then(onCharLoaded)\n            .catch(onError)\n    }\n\n    useEffect(()=>{\n        updateCharacter()\n    },[])\n\n    const errorMessage = error ? <ErrorMessage/> :null\n    const spinner = loading ? <Spinner/> :null\n    const content = !(error || loading) ? <View char={char}/> :null\n\n    return (\n        <div className=\"randomchar\">\n            {/*{loading ? <Spinner/> : error ? <ErrorMessage/> :<View char={char}/> }*/}\n            {content}\n            {errorMessage}\n            {spinner}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={onReloadChar} type=\"button\" className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const  {name,description,thumbnail,homepage,wiki} = char\n\n    let thumbnailClass = 'randomchar__img'\n    if (thumbnail.includes('not_available')) thumbnailClass += ' not-available'\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\"\n                 className={thumbnailClass}\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description || 'Данные отсутствуют'}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a rel=\"noreferrer\" href={homepage} target='_blank' className=\"button button__main\">\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a rel=\"noreferrer\" href={wiki} target='_blank' className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;\n","import {useEffect, useRef, useState} from \"react\";\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\nimport MarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\n\nconst InfiniteLoading = ({onIntersect,isDisabled}) => {\n    const [entries,setEntries] = useState(null)\n\n    const elementRef = useRef(null)\n\n    const observer = useRef(null)\n\n    const createObserver = () => {\n        let options = {\n            rootMargin: '0px',\n            threshold: 1.0\n        }\n\n        observer.current = new IntersectionObserver((entries) => {\n            setEntries(entries)\n        }, options)\n\n        observer.current.observe(elementRef.current);\n    }\n\n    const destroyObserver = () =>{\n        observer.current.unobserve(elementRef.current)\n    }\n\n    useEffect(()=>{\n        createObserver()\n        return destroyObserver\n    },[])\n\n\n    useEffect(()=>{\n        if (isDisabled) {\n            observer.current.unobserve(elementRef.current)\n            return\n        }\n\n        if (entries?.[0].isIntersecting) {\n            onIntersect()\n        }\n    },[entries,isDisabled])\n\n    return (\n        <div ref={elementRef} className=\"infinite-loading\"></div>\n    )\n}\n\nconst CharList = (props) => {\n    const [charList,setCharList] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n    const [newItemsLoading, setNewItemsLoading] = useState(false)\n    const [offset, setOffset] = useState(210)\n    const [charEnded, setCharEnded] = useState(false)\n    const [showModal,setShowModal] = useState(false)\n\n    const marveService = MarvelService\n\n\n    useEffect(()=>{\n        onRequest()\n    },[])\n\n\n    const onRequest = (offset) => {\n        if (!newItemsLoading) {\n            onCharListLoading()\n            marveService\n                .getAllCharacters(offset)\n                .then(onCharListLoaded)\n                .catch(onError)\n        }\n    }\n\n    const onIntersect = () =>{\n        onRequest(offset)\n    }\n\n    const onCharListLoading = () => {\n        setNewItemsLoading(true)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = newCharList.length < 9\n        setCharList(charList=> [...charList,...newCharList])\n        setLoading(false)\n        setNewItemsLoading(false)\n        setOffset(offset => offset + 9)\n        setCharEnded(ended)\n    }\n\n    const onError = () => {\n        setLoading(false)\n        setError(true)\n    }\n\n    const onHandleKeyDown = (e,id) =>{\n\n        if (\n            e.code === \"Enter\" ||\n            e.code === \"Space\"\n        ) {\n            e.preventDefault()\n           onHandleClick(id)\n        }\n    }\n\n    const onHandleClick = (e,id) => {\n        e.target.focus()\n        props.onCharSelect(id)\n        setShowModal(true)\n    }\n\n    const renderItems = (charList) => {\n        const charClass = (id,thumbnail) => {\n            let result = 'char__item'\n            if (props.selectedChar === id) result += ' char__item_selected'\n            if (thumbnail.includes('not_available')) result += ' not-available'\n            return result\n        }\n\n        const items =  charList && charList.map(({id,name,thumbnail}) => {\n            return (\n                <li key={id}\n                    tabIndex=\"0\"\n                    onClick = {(e)=>onHandleClick(e,id)}\n                    onKeyDown = {(e)=>onHandleKeyDown(e,id)}\n                    className={charClass(id,thumbnail)}>\n                    <img src={thumbnail} alt={name}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList)\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <button\n                className=\"button button__main button__long\"\n                style={charEnded ? {display:'none'} : null}\n                disabled={newItemsLoading}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n            <InfiniteLoading onIntersect={onIntersect} isDisabled={charEnded}></InfiniteLoading>\n            { showModal\n                ?   <Portal>\n                        <div onClick={()=>{setShowModal(false)}}\n                            className=\"portal\">\n                            <h2>Char selected</h2>\n                        </div>\n                    </Portal>\n                : null\n            }\n        </div>\n    )\n}\n\nconst Portal = (props) => {\n    return ReactDOM.createPortal(props.children, document.body)\n}\n\nCharList.propTypes = {\n    onCharSelect: PropTypes.func.isRequired\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component, useEffect, useState} from \"react\"\nimport PropTypes from 'prop-types'\n\nimport Spinner from \"../spinner/Spinner\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport './charInfo.scss'\nimport MarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst CharInfo = (props) => {\n    const [char,setChar] = useState(null)\n    const [error,setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    // state = {\n        // char: null,\n        // error: null,\n        // loading: false\n    // }\n\n    const marvelServices = MarvelService\n\n    const updateChar = () => {\n        const {charId} = props\n        if(!charId) return\n        onCharLoading()\n        marvelServices\n            .getCharacter(charId)\n            .then(onCharLoaded)\n            .catch(onError)\n    }\n\n    const onCharLoaded = (char) => {\n        // this.setState({\n        //     char,\n        //     loading:false\n        // })\n        setChar(char)\n        setLoading(false)\n    }\n\n    const onCharLoading = () => {\n        // this.setState({\n        //     loading:true\n        // })\n        setLoading(true)\n    }\n\n    const onError = () => {\n        // this.setState({\n        //     loading:false,\n        //     error: true\n        // })\n        setLoading(false)\n        setError(true)\n    }\n\n    useEffect(()=>{\n        updateChar()\n    },[])\n\n    useEffect(()=>{\n        updateChar()\n    },[props])\n\n    const skeleton = char || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> :null\n    const spinner = loading ? <Spinner/> :null\n    const content = !(error || loading) && char ? <View char={char}/> :null\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {content}\n            {errorMessage}\n            {spinner}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name,description,thumbnail,homepage,wiki,comics} = char\n\n    const imgStyle = (thumbnail) => {\n        return thumbnail.includes('not_available') ? {objectFit: 'contain'} : null\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img style={imgStyle(thumbnail)} src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a rel=\"noreferrer\" target=\"_blanc\" href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a rel=\"norefferer\" target=\"_blanc\" href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                { comics.slice(0,10).map((item,i) => {\n                    return (\n                        <li key={i} className=\"char__comics-item\">\n                            {item.name}\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;\n","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error,errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <div className=\"error-boundary\">\r\n                    <ErrorMessage/>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState,Children, cloneElement} from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\n// const DynamicGreeting = (props) => {\n//     return(\n//         <div style={{color: props.color,display:'flex'}}>\n//             {Children.map(props.children,(child) => {\n//                 return cloneElement(child,{style: {\n//                         margin: 10,\n//                         padding : 10,\n//                         border: '1px solid #282828'\n//                     }})\n//             })}\n//         </div>\n//     )\n// }\n\nconst App = () => {\n\n    const [selectedChar,setSelectedChar] = useState(null)\n\n    const onCharSelect = (id) => {\n        setSelectedChar(id)\n    }\n\n    return (\n        <div className=\"app\">\n            {/*<DynamicGreeting color={'grey'}>*/}\n            {/*    <h2>Hello</h2>*/}\n            {/*    <h2>World!</h2>*/}\n            {/*</DynamicGreeting>*/}\n            <AppHeader/>\n            <main>\n                <RandomChar/>\n                <div className=\"char__content\">\n                    <CharList selectedChar={selectedChar} onCharSelect={onCharSelect}/>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedChar}/>\n                    </ErrorBoundary>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}