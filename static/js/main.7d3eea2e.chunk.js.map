{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","resources/img/mjolnir.png","services/MarvelService.js","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.js","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","components/app/App.jsx","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","response","ok","Error","status","json","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","name","description","thumbnail","path","extension","urls","comics","slice","homepage","wiki","items","RandomChar","state","char","loading","error","marveService","MarvelService","onCharLoaded","setState","onCharLoading","onReloadChar","updateCharacter","onError","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","thumbnailClass","includes","rel","target","CharList","charList","newItemsLoading","charEnded","showModal","createObserver","document","querySelector","IntersectionObserver","entries","observer","unobserve","isIntersecting","onRequest","rootMargin","threshold","observe","onCharListLoading","onCharListLoaded","newCharList","ended","onHandleKeyDown","e","code","preventDefault","onHandleClick","focus","props","onCharSelect","charClass","result","selectedChar","tabIndex","onKeyDown","renderItems","disabled","Portal","ReactDOM","createPortal","children","body","Skeleton","CharInfo","marvelServices","updateChar","charId","prevProps","prevState","skeleton","objectFit","imgStyle","length","item","i","ErrorBoundary","errorInfo","console","log","DynamicGreeting","color","Children","child","cloneElement","padding","border","App","decoration","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d3eea2e.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nimport './errorMessage.scss'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className={'error-message'}>\r\n            <img src={img}\r\n                 alt=\"Error\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    _apiKey = 'apikey=80f011b25c1428d39d22690f30880db4'\r\n    _baseOffset = 210\r\n\r\n    getResource = async(url) => {\r\n        let response = await fetch(url)\r\n\r\n        if (!response.ok) throw new Error(`Could not fetch ${url} , status: ${response.status}`)\r\n\r\n        return await response.json()\r\n    }\r\n\r\n    // getResource(url) {\r\n    //     return fetch(url)\r\n    //         .then(res => {\r\n    //             if (!res.ok) throw new Error(`Could not fetch ${url} , status: ${res.status}`)\r\n    //             return res.json()\r\n    //         })\r\n    // }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        let res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\r\n        return res.data.results.map(this._transformCharacter)\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`)\r\n        // const res = await Promise.resolve('error')\r\n        return this._transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacter = ({id,name, description, thumbnail:{path,extension}, urls, comics}) => {\r\n        return {\r\n            id,\r\n            name,\r\n            description: description ? `${description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: `${path}.${extension}`,\r\n            homepage: urls[0].url,\r\n            wiki: urls[1].url,\r\n            comics: comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default new MarvelService()\r\n\r\n\r\n\r\n\r\n","import { Component } from \"react\";\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from \"../../services/MarvelService\";\n\nclass RandomChar extends Component {\n    state = {\n        char:{},\n        loading: true,\n        error: false\n    }\n\n    marveService = MarvelService\n\n    // updateAll = () => {\n    //     this.marveService\n    //         .getAllCharacters()\n    //         .then(res=>console.log(res))\n    // }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading:false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading:true\n        })\n    }\n\n    onReloadChar = () => {\n        this.updateCharacter()\n    }\n\n    onError = () => {\n        this.setState({\n            loading:false,\n            error: true\n        })\n    }\n\n    updateCharacter = () => {\n        this.onCharLoading()\n        const id = Math.floor(Math.random() * 400 + 1011000)\n        this.marveService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    componentDidMount() {\n        this.updateCharacter()\n    }\n\n    render(){\n        const  {char,loading, error} = this.state\n\n        const errorMessage = error ? <ErrorMessage/> :null\n        const spinner = loading ? <Spinner/> :null\n        const content = !(error || loading) ? <View char={char}/> :null\n\n        return (\n            <div className=\"randomchar\">\n                {/*{loading ? <Spinner/> : error ? <ErrorMessage/> :<View char={char}/> }*/}\n                {content}\n                {errorMessage}\n                {spinner}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.onReloadChar} type=\"button\" className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const  {name,description,thumbnail,homepage,wiki} = char\n\n    let thumbnailClass = 'randomchar__img'\n    if (thumbnail.includes('not_available')) thumbnailClass += ' not-available'\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\"\n                 className={thumbnailClass}\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description || 'Данные отсутствуют'}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a rel=\"noreferrer\" href={homepage} target='_blank' className=\"button button__main\">\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a rel=\"noreferrer\" href={wiki} target='_blank' className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;\n","import {Component} from \"react\";\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\nimport MarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\n\n\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemsLoading: false,\n        offset: 210,\n        charEnded: false,\n        showModal: false\n    }\n\n    marveService = MarvelService\n\n    createObserver = () => {\n        let options = {\n            rootMargin: '0px',\n            threshold: 1.0\n        }\n\n        const target = document.querySelector('.infinite-loading');\n\n        const observer = new IntersectionObserver((entries, observer) => {\n            const {loading,newItemsLoading,offset,charEnded} = this.state\n\n            if (charEnded) {\n                observer.unobserve(target)\n                return\n            }\n            if (entries[0].isIntersecting && !loading && !newItemsLoading) {\n                this.onRequest(offset)\n            }\n        }, options);\n\n        observer.observe(target);\n    }\n\n    componentDidMount() {\n        this.onRequest()\n        // this.createObserver()\n    }\n\n    onRequest = (offset) => {\n        if (!this.newItemsLoading) {\n            this.onCharListLoading()\n            this.marveService\n                .getAllCharacters(offset)\n                .then(this.onCharListLoaded)\n                .catch(this.onError)\n        }\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemsLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = newCharList < 9\n\n        this.setState(({charList,offset}) => ({\n            charList: [...charList,...newCharList],\n            loading:false,\n            newItemsLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading:false,\n            error: true\n        })\n    }\n\n    onHandleKeyDown = (e,id) =>{\n\n        if (\n            e.code === \"Enter\" ||\n            e.code === \"Space\"\n        ) {\n            e.preventDefault()\n           this.onHandleClick(id)\n        }\n    }\n\n    onHandleClick = (e,id) => {\n        e.target.focus()\n        this.props.onCharSelect(id)\n        this.setState({\n            showModal:true\n        })\n    }\n\n    renderItems(charList) {\n        const charClass = (id,thumbnail) => {\n            let result = 'char__item'\n            if (this.props.selectedChar === id) result += ' char__item_selected'\n            if (thumbnail.includes('not_available')) result += ' not-available'\n            return result\n        }\n\n        const items =  charList && charList.map(({id,name,thumbnail}) => {\n            return (\n                <li key={id}\n                    tabIndex=\"0\"\n                    onClick = {(e)=>this.onHandleClick(e,id)}\n                    onKeyDown = {(e)=>this.onHandleKeyDown(e,id)}\n                    className={charClass(id,thumbnail)}>\n                    <img src={thumbnail} alt={name}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render () {\n        const {charList,error,loading,newItemsLoading,offset,charEnded,showModal} = this.state\n\n        const items = this.renderItems(charList)\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    style={charEnded ? {display:'none'} : null}\n                    disabled={newItemsLoading}\n                    onClick={() => this.onRequest(offset)}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n                <div className=\"infinite-loading\"></div>\n                { showModal\n                    ?   <Portal>\n                            <div onClick={()=>{this.setState({showModal:false})}}\n                                className=\"portal\">\n                                <h2>Char selected</h2>\n                            </div>\n                        </Portal>\n                    : null\n                }\n\n            </div>\n        )\n    }\n}\n\nconst Portal = (props) => {\n    return ReactDOM.createPortal(props.children, document.body)\n}\n\nCharList.propTypes = {\n    onCharSelect: PropTypes.func.isRequired\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component} from \"react\"\nimport PropTypes from 'prop-types'\n\nimport Spinner from \"../spinner/Spinner\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport './charInfo.scss'\nimport MarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        error: null,\n        loading: false\n    }\n\n    marvelServices = MarvelService\n\n    updateChar = () => {\n        const {charId} = this.props\n        if(!charId) return\n        this.onCharLoading()\n        this.marvelServices\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n\n        // this.foo.bar = 0\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading:false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading:true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading:false,\n            error: true\n        })\n    }\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.charId !== this.props.charId) this.updateChar()\n    }\n\n\n    render() {\n        const {char,loading,error} = this.state\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> :null\n        const spinner = loading ? <Spinner/> :null\n        const content = !(error || loading) && char ? <View char={char}/> :null\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {content}\n                {errorMessage}\n                {spinner}\n            </div>\n        )\n    }\n\n}\n\nconst View = ({char}) => {\n    const {name,description,thumbnail,homepage,wiki,comics} = char\n\n    const imgStyle = (thumbnail) => {\n        return thumbnail.includes('not_available') ? {objectFit: 'contain'} : null\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img style={imgStyle(thumbnail)} src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a rel=\"noreferrer\" target=\"_blanc\" href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a rel=\"norefferer\" target=\"_blanc\" href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                { comics.slice(0,10).map((item,i) => {\n                    return (\n                        <li key={i} className=\"char__comics-item\">\n                            {item.name}\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;\n","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error,errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <div className=\"error-boundary\">\r\n                    <ErrorMessage/>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component,Children, cloneElement} from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst DynamicGreeting = (props) => {\n    return(\n        <div style={{color: props.color,display:'flex'}}>\n            {Children.map(props.children,(child) => {\n                return cloneElement(child,{style: {\n                        margin: 10,\n                        padding : 10,\n                        border: '1px solid #282828'\n                    }})\n            })}\n        </div>\n    )\n}\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelect = (id) => {\n        this.setState({\n            selectedChar:id\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"app\">\n                <DynamicGreeting color={'grey'}>\n                    <h2>Hello</h2>\n                    <h2>World!</h2>\n                </DynamicGreeting>\n                <AppHeader/>\n                <main>\n                    <RandomChar/>\n                    <div className=\"char__content\">\n                        <CharList selectedChar={this.state.selectedChar} onCharSelect={this.onCharSelect}/>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}