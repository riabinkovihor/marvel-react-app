{"version":3,"sources":["components/appHeader/AppHeader.jsx","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","resources/img/mjolnir.png","hooks/useHttp.hook.js","services/MarvelService.js","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.js","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","components/pages/MainPage.jsx","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.jsx","components/notFound/notFound.jsx","components/pages/NotFoundPage.jsx","components/singleComic/SingleComic.jsx","components/pages/SingleComicPage.jsx","components/app/App.jsx","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","message","console","log","useMarvelService","_apiBase","_apiKey","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","name","description","thumbnail","path","extension","urls","comics","slice","homepage","wiki","items","title","pageCount","language","textObjects","price","prices","View","char","thumbnailClass","includes","rel","href","target","RandomChar","setChar","onCharLoaded","updateCharacter","Math","floor","random","then","useEffect","timerId","setInterval","clearInterval","errorMessage","spinner","content","onClick","mjolnir","InfiniteLoading","onIntersect","isDisabled","entries","setEntries","elementRef","useRef","observer","destroyObserver","current","disconnect","IntersectionObserver","rootMargin","threshold","observe","unobserve","isIntersecting","ref","Portal","props","ReactDOM","createPortal","children","document","CharList","charList","setCharList","newItemsLoading","setNewItemsLoading","setOffset","charEnded","setCharEnded","showModal","setShowModal","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","onHandleClick","e","focus","onCharSelect","charClass","result","selectedChar","tabIndex","onKeyDown","code","preventDefault","onHandleKeyDown","renderItems","disabled","Skeleton","objectFit","imgStyle","item","i","CharInfo","updateChar","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","Component","MainPage","setSelectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","initial","onComicsListLoaded","newComicsList","arr","ComicsPage","NotFound","NotFoundPage","comic","SingleComic","comicId","useParams","setComic","updateComic","onComicLoaded","SingleComicPage","App","basename","element","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b8646b7.chunk.js","sourcesContent":["import './appHeader.scss';\nimport {Link, NavLink} from \"react-router-dom\";\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <NavLink\n                            end\n                            style={({isActive}) => ({color: isActive ? '#9f0013' : null})}\n                            to=\"/\"\n                        >Characters\n                        </NavLink>\n                    </li>\n                    /\n                    <li>\n                        <NavLink\n                            end\n                            style={({isActive}) => ({color: isActive ? '#9f0013' : null})}\n                            to=\"/comics\"\n                        >Comics\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;\n","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nimport './errorMessage.scss'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className={'error-message'}>\r\n            <img src={img}\r\n                 alt=\"Error\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useCallback, useState} from \"react\";\r\n\r\nconst useHttp = () => {\r\n    const [loading,setLoading] = useState(true)\r\n    const [error,setError] = useState(false)\r\n\r\n    const request = useCallback(async (url,method='GET',body=null,headers={'Content-Type':'application/json'})=>{\r\n        setLoading(true)\r\n        setError(false)\r\n\r\n        try {\r\n            let response = await fetch(url,{method,body,headers})\r\n            if (!response.ok) throw new Error(`Could not fetch ${url} , status: ${response.status}`)\r\n            return await response.json()\r\n        } catch (e) {\r\n            setError(e.message )\r\n            console.log('Error on useHttp --> ',e)\r\n            throw e\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n\r\n    },[])\r\n\r\n    return {request,loading,error}\r\n}\r\n export default useHttp\r\n","import useHttp from \"../hooks/useHttp.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {request, loading, error} = useHttp()\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = 'apikey=80f011b25c1428d39d22690f30880db4'\r\n    // _apiKey = 'apikey=f55ef85c523bfdec0ca090c582466126'\r\n    const _baseOffset = 210\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        try {\r\n            let res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n            return res.data.results.map(_transformCharacter)\r\n        } catch (e) {\r\n            console.log('Error on getAllCharacters --> ', e)\r\n        }\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        try {\r\n            const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n            return _transformCharacter(res.data.results[0])\r\n        } catch (e) {\r\n            console.log('Error on getCharacter --> ', e)\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        try {\r\n            const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n            return res.data.results.map(_transformComics);\r\n        } catch (e) {\r\n            console.log('Error on getAllComics --> ',e)\r\n        }\r\n\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        try {\r\n            const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n            return _transformComics(res.data.results[0]);\r\n        } catch (e) {\r\n            console.log('Error on getComics --> ',e)\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = ({id,name, description, thumbnail:{path,extension}, urls, comics}) => {\r\n        return {\r\n            id,\r\n            name,\r\n            description: description ? `${description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: `${path}.${extension}`,\r\n            homepage: urls[0].url,\r\n            wiki: urls[1].url,\r\n            comics: comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    return {loading,error, getAllCharacters,getCharacter, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService\r\n\r\n\r\n\r\n\r\n","import {useEffect, useState} from \"react\";\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst RandomChar = () => {\n    const [char,setChar] = useState({})\n\n    const {loading,error, getCharacter} = useMarvelService()\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    const updateCharacter = () => {\n        const id = Math.floor(Math.random() * 400 + 1011000)\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    useEffect(()=>{\n        updateCharacter()\n        const timerId = setInterval(updateCharacter, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    },[])\n\n    const errorMessage = error ? <ErrorMessage/> :null\n    const spinner = loading ? <Spinner/> :null\n    const content = !error && !loading && char ? <View char={char}/> :null\n\n    return (\n        <div className=\"randomchar\">\n            {/*{loading ? <Spinner/> : error ? <ErrorMessage/> :<View char={char}/> }*/}\n            {content}\n            {errorMessage}\n            {spinner}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateCharacter} type=\"button\" className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const  {name,description,thumbnail,homepage,wiki} = char\n\n    let thumbnailClass = 'randomchar__img'\n    if (thumbnail?.includes('not_available')) thumbnailClass += ' not-available'\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\"\n                 className={thumbnailClass}\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description || 'Данные отсутствуют'}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a rel=\"noreferrer\" href={homepage} target='_blank' className=\"button button__main\">\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a rel=\"noreferrer\" href={wiki} target='_blank' className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;\n","import {useEffect, useRef, useState} from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './charList.scss';\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\n\r\nconst InfiniteLoading = ({onIntersect,isDisabled}) => {\r\n    const [entries,setEntries] = useState(null)\r\n\r\n    const elementRef = useRef(null)\r\n\r\n    const observer = useRef(null)\r\n\r\n    const createObserver = () => {\r\n        let options = {\r\n            rootMargin: '0px',\r\n            threshold: 1.0\r\n        }\r\n\r\n        observer.current = new IntersectionObserver((entries) => {\r\n            setEntries(entries)\r\n        }, options)\r\n\r\n        observer.current.observe(elementRef.current);\r\n    }\r\n\r\n    const destroyObserver = () =>{\r\n        observer.current.disconnect()\r\n        observer.current = null\r\n    }\r\n\r\n    useEffect(()=>{\r\n        createObserver()\r\n        return destroyObserver\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if (isDisabled) {\r\n            observer.current.unobserve(elementRef.current)\r\n            return\r\n        }\r\n\r\n        if (entries?.[0].isIntersecting) {\r\n            onIntersect()\r\n        }\r\n    },[entries,isDisabled])\r\n\r\n    return (\r\n        <div ref={elementRef} className=\"infinite-loading\"></div>\r\n    )\r\n}\r\n\r\nconst CharList = (props) => {\r\n    const [charList,setCharList] = useState([])\r\n    const [newItemsLoading, setNewItemsLoading] = useState(false)\r\n    const [offset, setOffset] = useState(210)\r\n    const [charEnded, setCharEnded] = useState(false)\r\n    const [showModal,setShowModal] = useState(false)\r\n\r\n    const {loading, error, getAllCharacters} = useMarvelService()\r\n\r\n\r\n    useEffect(()=>{\r\n        onRequest()\r\n    },[])\r\n\r\n\r\n    const onRequest = (offset) => {\r\n        if (!newItemsLoading) {\r\n            onCharListLoading()\r\n            getAllCharacters(offset)\r\n                .then(onCharListLoaded)\r\n        }\r\n    }\r\n\r\n    const onIntersect = () =>{\r\n        onRequest(offset)\r\n    }\r\n\r\n    const onCharListLoading = () => {\r\n        setNewItemsLoading(true)\r\n    }\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = newCharList.length < 9\r\n        setCharList(charList=> [...charList,...newCharList])\r\n        setNewItemsLoading(false)\r\n        setOffset(offset => offset + 9)\r\n        setCharEnded(ended)\r\n    }\r\n\r\n    const onHandleKeyDown = (e,id) =>{\r\n\r\n        if (\r\n            e.code === \"Enter\" ||\r\n            e.code === \"Space\"\r\n        ) {\r\n            e.preventDefault()\r\n           onHandleClick(id)\r\n        }\r\n    }\r\n\r\n    const onHandleClick = (e,id) => {\r\n        e.target.focus()\r\n        props.onCharSelect(id)\r\n        setShowModal(true)\r\n    }\r\n\r\n    const renderItems = (charList) => {\r\n        const charClass = (id,thumbnail) => {\r\n            let result = 'char__item'\r\n            if (props.selectedChar === id) result += ' char__item_selected'\r\n            if (thumbnail.includes('not_available')) result += ' not-available'\r\n            return result\r\n        }\r\n\r\n        const items =  charList && charList.map(({id,name,thumbnail}) => {\r\n            return (\r\n                <li key={id}\r\n                    tabIndex=\"0\"\r\n                    onClick = {(e)=>onHandleClick(e,id)}\r\n                    onKeyDown = {(e)=>onHandleKeyDown(e,id)}\r\n                    className={charClass(id,thumbnail)}>\r\n                    <img src={thumbnail} alt={name}/>\r\n                    <div className=\"char__name\">{name}</div>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(charList)\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && charList.length === 0 ? <Spinner/> : null;\r\n    const content = !error && charList.length > 0 ? items : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                style={charEnded ? {display:'none'} : null}\r\n                disabled={newItemsLoading}\r\n                onClick={() => onRequest(offset)}\r\n            >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n            <InfiniteLoading onIntersect={onIntersect} isDisabled={charEnded}></InfiniteLoading>\r\n            { showModal\r\n                ?   <Portal>\r\n                        <div onClick={()=>{setShowModal(false)}}\r\n                            className=\"portal\">\r\n                            <h2 className=\"portal__title\">Char selected</h2>\r\n                        </div>\r\n                    </Portal>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Portal = (props) => {\r\n    return ReactDOM.createPortal(props.children, document.body)\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelect: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useEffect, useState} from \"react\"\nimport PropTypes from 'prop-types'\n\nimport Spinner from \"../spinner/Spinner\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport './charInfo.scss'\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst CharInfo = (props) => {\n    const [char,setChar] = useState(null)\n\n    const {loading,error, getCharacter} = useMarvelService()\n\n    const updateChar = () => {\n        const {charId} = props\n        if(!charId) return\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n    useEffect(()=>{\n        updateChar()\n    },[])\n\n    useEffect(()=>{\n        updateChar()\n    },[props.charId])\n\n    const skeleton = char || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> :null\n    const spinner = loading ? <Spinner/> :null\n    const content = !(error || loading) && char ? <View char={char}/> :null\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {content}\n            {errorMessage}\n            {spinner}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name,description,thumbnail,homepage,wiki,comics} = char\n\n    const imgStyle = (thumbnail) => {\n        return thumbnail.includes('not_available') ? {objectFit: 'contain'} : null\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img style={imgStyle(thumbnail)} src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a rel=\"noreferrer\" target=\"_blanc\" href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a rel=\"norefferer\" target=\"_blanc\" href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                { comics.slice(0,10).map((item,i) => {\n                    return (\n                        <li key={i} className=\"char__comics-item\">\n                            {item.name}\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;\n","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error,errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return (\r\n                <div className=\"error-boundary\">\r\n                    <ErrorMessage/>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar,setSelectedChar] = useState(null)\r\n    const onCharSelect = (id) => {\r\n        setSelectedChar(id)\r\n    }\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList selectedChar={selectedChar} onCharSelect={onCharSelect}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useState, useEffect} from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport {Link} from \"react-router-dom\";\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                disabled={newItemLoading}\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsPage\r\n","import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './notFound.scss'\r\n\r\nexport default function NotFound () {\r\n    return (\r\n        <div className=\"page-404 container\">\r\n            <ErrorMessage/>\r\n            <h1 className=\"page-404__title\">404</h1>\r\n            <h2 className=\"page-404__subtitle\">Not found</h2>\r\n            <Link className=\"page-404__button\"\r\n                  to=\"/\"\r\n            >Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n","import NotFound from \"../notFound/notFound\";\r\n\r\nexport default function NotFoundPage () {\r\n    return <NotFound/>\r\n}\r\n","import './singleComic.scss';\nimport {useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport {Link} from \"react-router-dom\";\n\nconst SingleComic = () => {\n    const {comicId} = useParams()\n    const [comic,setComic] = useState(null)\n\n    const {loading,error, getComic} = useMarvelService()\n    const updateComic = () => {\n        getComic(comicId)\n            .then(onComicLoaded)\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic)\n    }\n\n    useEffect(()=>{\n        updateComic()\n    },[])\n\n    useEffect(()=>{\n        updateComic()\n    },[comicId])\n\n    const skeleton = comic || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> :null\n    const spinner = loading ? <Spinner/> :null\n    const content = !(error || loading) && comic ? <View comic={comic}/> :null\n    return (\n        <>\n            {skeleton}\n            {content}\n            {errorMessage}\n            {spinner}\n        </>\n    )\n}\n\nconst View = ({comic}) => {\n    const {title,description,pageCount,thumbnail,language,price} = comic\n\n    return (\n        <div className=\"single-comic container\">\n            <img src={thumbnail} alt=\"x-men\" className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">Price: {price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComic;\n","import SingleComic from \"../singleComic/SingleComic\";\r\nexport default function SingleComicPage () {\r\n    return <SingleComic/>\r\n}\r\n","import {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport {MainPage, ComicsPage, NotFoundPage, SingleComicPage} from \"../pages\"\n\nconst App = () => {\n    return (\n        <Router basename=\"/marvel-react-app\">\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={ <MainPage/>}/>\n                        <Route path=\"comics\" element={ <ComicsPage/>}/>\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage />} />\n                        <Route path='*' element={<NotFoundPage />} />\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}